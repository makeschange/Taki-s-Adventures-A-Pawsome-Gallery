import{Schema,model,models}from"mongoose";import validator from"validator";import bcrypt from"bcryptjs";const userSchema=new Schema({firstname:String,lastname:String,email:{type:String,unique:!0,required:[!0,"Email is required!"],validate:[validator.isEmail,"Please provide a valid email!"]},profilePhoto:String,password:{type:String,required:[!0,"Password is required!"],minLength:5}},{timestamps:!0});userSchema.pre("save",(async function(next){if(!this.isModified("password"))return next();this.password=await bcrypt.hash(this.password,12),next()})),userSchema.methods.comparePassword=async function(enteredPassword){return await bcrypt.compare(enteredPassword,this.password)},console.log("User Model");const User=models.User||model("User",userSchema);export default User;